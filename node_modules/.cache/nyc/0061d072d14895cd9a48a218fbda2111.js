var cov_2usnz76pl=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/networks.js",hash="6accf9601ca5b9a3b76b3cc6dde45bb6221fc488",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/networks.js",statementMap:{"0":{start:{line:1,column:24},end:{line:1,column:66}},"1":{start:{line:2,column:11},end:{line:2,column:54}},"2":{start:{line:3,column:16},end:{line:3,column:46}},"3":{start:{line:4,column:15},end:{line:4,column:32}},"4":{start:{line:5,column:25},end:{line:5,column:69}},"5":{start:{line:6,column:22},end:{line:6,column:45}},"6":{start:{line:11,column:4},end:{line:34,column:5}},"7":{start:{line:12,column:8},end:{line:16,column:9}},"8":{start:{line:18,column:9},end:{line:34,column:5}},"9":{start:{line:19,column:8},end:{line:25,column:9}},"10":{start:{line:26,column:11},end:{line:34,column:5}},"11":{start:{line:27,column:8},end:{line:33,column:9}},"12":{start:{line:35,column:4},end:{line:35,column:19}},"13":{start:{line:40,column:26},end:{line:40,column:28}},"14":{start:{line:41,column:18},end:{line:48,column:5}},"15":{start:{line:49,column:4},end:{line:66,column:5}},"16":{start:{line:50,column:8},end:{line:50,column:72}},"17":{start:{line:51,column:8},end:{line:51,column:59}},"18":{start:{line:52,column:8},end:{line:52,column:63}},"19":{start:{line:53,column:8},end:{line:53,column:44}},"20":{start:{line:54,column:8},end:{line:54,column:48}},"21":{start:{line:55,column:8},end:{line:55,column:59}},"22":{start:{line:56,column:8},end:{line:56,column:37}},"23":{start:{line:57,column:8},end:{line:64,column:10}},"24":{start:{line:67,column:4},end:{line:67,column:27}},"25":{start:{line:71,column:4},end:{line:91,column:5}},"26":{start:{line:72,column:23},end:{line:72,column:56}},"27":{start:{line:73,column:28},end:{line:86,column:10}},"28":{start:{line:76,column:13},end:{line:84,column:13}},"29":{start:{line:78,column:17},end:{line:78,column:54}},"30":{start:{line:79,column:19},end:{line:84,column:13}},"31":{start:{line:81,column:16},end:{line:81,column:54}},"32":{start:{line:83,column:16},end:{line:83,column:83}},"33":{start:{line:85,column:12},end:{line:85,column:24}},"34":{start:{line:87,column:4},end:{line:87,column:70}},"35":{start:{line:88,column:4},end:{line:88,column:25}},"36":{start:{line:90,column:8},end:{line:90,column:18}},"37":{start:{line:94,column:16},end:{line:94,column:76}},"38":{start:{line:95,column:4},end:{line:95,column:17}},"39":{start:{line:98,column:0},end:{line:269,column:1}},"40":{start:{line:100,column:29},end:{line:100,column:33}},"41":{start:{line:102,column:8},end:{line:134,column:9}},"42":{start:{line:103,column:12},end:{line:108,column:18}},"43":{start:{line:106,column:20},end:{line:106,column:38}},"44":{start:{line:107,column:20},end:{line:107,column:87}},"45":{start:{line:109,column:30},end:{line:114,column:18}},"46":{start:{line:112,column:20},end:{line:112,column:39}},"47":{start:{line:113,column:20},end:{line:113,column:80}},"48":{start:{line:115,column:12},end:{line:120,column:19}},"49":{start:{line:118,column:20},end:{line:118,column:39}},"50":{start:{line:119,column:20},end:{line:119,column:69}},"51":{start:{line:121,column:12},end:{line:121,column:58}},"52":{start:{line:122,column:12},end:{line:122,column:111}},"53":{start:{line:124,column:12},end:{line:124,column:49}},"54":{start:{line:125,column:12},end:{line:133,column:13}},"55":{start:{line:126,column:16},end:{line:126,column:91}},"56":{start:{line:128,column:17},end:{line:133,column:13}},"57":{start:{line:129,column:16},end:{line:129,column:62}},"58":{start:{line:130,column:16},end:{line:130,column:130}},"59":{start:{line:132,column:16},end:{line:132,column:89}},"60":{start:{line:137,column:8},end:{line:149,column:9}},"61":{start:{line:138,column:30},end:{line:142,column:14}},"62":{start:{line:140,column:14},end:{line:140,column:33}},"63":{start:{line:141,column:14},end:{line:141,column:74}},"64":{start:{line:143,column:12},end:{line:143,column:54}},"65":{start:{line:144,column:12},end:{line:144,column:109}},"66":{start:{line:147,column:12},end:{line:147,column:49}},"67":{start:{line:148,column:12},end:{line:148,column:87}},"68":{start:{line:152,column:29},end:{line:152,column:33}},"69":{start:{line:154,column:8},end:{line:186,column:9}},"70":{start:{line:155,column:12},end:{line:155,column:38}},"71":{start:{line:156,column:23},end:{line:156,column:48}},"72":{start:{line:157,column:31},end:{line:157,column:64}},"73":{start:{line:158,column:25},end:{line:163,column:18}},"74":{start:{line:161,column:20},end:{line:161,column:38}},"75":{start:{line:162,column:20},end:{line:162,column:90}},"76":{start:{line:164,column:12},end:{line:169,column:19}},"77":{start:{line:167,column:20},end:{line:167,column:39}},"78":{start:{line:168,column:20},end:{line:168,column:82}},"79":{start:{line:170,column:12},end:{line:170,column:82}},"80":{start:{line:172,column:12},end:{line:172,column:49}},"81":{start:{line:177,column:12},end:{line:177,column:29}},"82":{start:{line:178,column:12},end:{line:185,column:13}},"83":{start:{line:179,column:16},end:{line:179,column:93}},"84":{start:{line:180,column:19},end:{line:185,column:13}},"85":{start:{line:181,column:16},end:{line:181,column:62}},"86":{start:{line:182,column:16},end:{line:182,column:148}},"87":{start:{line:184,column:16},end:{line:184,column:73}},"88":{start:{line:189,column:29},end:{line:189,column:33}},"89":{start:{line:191,column:8},end:{line:222,column:9}},"90":{start:{line:192,column:23},end:{line:192,column:48}},"91":{start:{line:193,column:31},end:{line:193,column:64}},"92":{start:{line:194,column:25},end:{line:199,column:18}},"93":{start:{line:197,column:20},end:{line:197,column:39}},"94":{start:{line:198,column:20},end:{line:198,column:89}},"95":{start:{line:200,column:12},end:{line:205,column:18}},"96":{start:{line:203,column:20},end:{line:203,column:39}},"97":{start:{line:204,column:20},end:{line:204,column:82}},"98":{start:{line:206,column:12},end:{line:206,column:82}},"99":{start:{line:208,column:12},end:{line:208,column:49}},"100":{start:{line:213,column:12},end:{line:213,column:29}},"101":{start:{line:214,column:12},end:{line:221,column:13}},"102":{start:{line:215,column:16},end:{line:215,column:93}},"103":{start:{line:216,column:19},end:{line:221,column:13}},"104":{start:{line:217,column:16},end:{line:217,column:62}},"105":{start:{line:218,column:16},end:{line:218,column:148}},"106":{start:{line:220,column:16},end:{line:220,column:73}},"107":{start:{line:225,column:29},end:{line:225,column:33}},"108":{start:{line:227,column:8},end:{line:267,column:9}},"109":{start:{line:228,column:12},end:{line:233,column:19}},"110":{start:{line:231,column:20},end:{line:231,column:39}},"111":{start:{line:232,column:20},end:{line:232,column:89}},"112":{start:{line:234,column:12},end:{line:239,column:19}},"113":{start:{line:237,column:20},end:{line:237,column:39}},"114":{start:{line:238,column:20},end:{line:238,column:89}},"115":{start:{line:240,column:12},end:{line:245,column:19}},"116":{start:{line:243,column:20},end:{line:243,column:39}},"117":{start:{line:244,column:20},end:{line:244,column:89}},"118":{start:{line:246,column:12},end:{line:246,column:58}},"119":{start:{line:247,column:12},end:{line:247,column:112}},"120":{start:{line:249,column:12},end:{line:249,column:49}},"121":{start:{line:254,column:12},end:{line:254,column:29}},"122":{start:{line:255,column:12},end:{line:266,column:13}},"123":{start:{line:256,column:16},end:{line:256,column:93}},"124":{start:{line:257,column:19},end:{line:266,column:13}},"125":{start:{line:258,column:16},end:{line:258,column:51}},"126":{start:{line:259,column:16},end:{line:259,column:138}},"127":{start:{line:261,column:17},end:{line:266,column:13}},"128":{start:{line:262,column:16},end:{line:262,column:62}},"129":{start:{line:263,column:16},end:{line:263,column:148}},"130":{start:{line:265,column:16},end:{line:265,column:73}}},fnMap:{"0":{name:"network_api_request_data",decl:{start:{line:9,column:9},end:{line:9,column:33}},loc:{start:{line:9,column:46},end:{line:36,column:1}},line:9},"1":{name:"convert_names_networks",decl:{start:{line:38,column:9},end:{line:38,column:31}},loc:{start:{line:38,column:42},end:{line:68,column:1}},line:38},"2":{name:"get_networks",decl:{start:{line:70,column:15},end:{line:70,column:27}},loc:{start:{line:70,column:29},end:{line:92,column:1}},line:70},"3":{name:"(anonymous_3)",decl:{start:{line:74,column:15},end:{line:74,column:16}},loc:{start:{line:74,column:22},end:{line:86,column:9}},line:74},"4":{name:"error_message",decl:{start:{line:93,column:9},end:{line:93,column:22}},loc:{start:{line:93,column:61},end:{line:96,column:1}},line:93},"5":{name:"(anonymous_5)",decl:{start:{line:99,column:18},end:{line:99,column:19}},loc:{start:{line:99,column:43},end:{line:135,column:5}},line:99},"6":{name:"(anonymous_6)",decl:{start:{line:104,column:23},end:{line:104,column:24}},loc:{start:{line:104,column:30},end:{line:108,column:17}},line:104},"7":{name:"(anonymous_7)",decl:{start:{line:110,column:23},end:{line:110,column:24}},loc:{start:{line:110,column:30},end:{line:114,column:17}},line:110},"8":{name:"(anonymous_8)",decl:{start:{line:116,column:23},end:{line:116,column:24}},loc:{start:{line:116,column:30},end:{line:120,column:17}},line:116},"9":{name:"(anonymous_9)",decl:{start:{line:136,column:27},end:{line:136,column:28}},loc:{start:{line:136,column:51},end:{line:150,column:5}},line:136},"10":{name:"(anonymous_10)",decl:{start:{line:138,column:60},end:{line:138,column:61}},loc:{start:{line:138,column:67},end:{line:142,column:13}},line:138},"11":{name:"(anonymous_11)",decl:{start:{line:151,column:21},end:{line:151,column:22}},loc:{start:{line:151,column:45},end:{line:187,column:5}},line:151},"12":{name:"(anonymous_12)",decl:{start:{line:159,column:23},end:{line:159,column:24}},loc:{start:{line:159,column:30},end:{line:163,column:17}},line:159},"13":{name:"(anonymous_13)",decl:{start:{line:165,column:23},end:{line:165,column:24}},loc:{start:{line:165,column:30},end:{line:169,column:17}},line:165},"14":{name:"(anonymous_14)",decl:{start:{line:188,column:21},end:{line:188,column:22}},loc:{start:{line:188,column:45},end:{line:223,column:5}},line:188},"15":{name:"(anonymous_15)",decl:{start:{line:195,column:23},end:{line:195,column:24}},loc:{start:{line:195,column:30},end:{line:199,column:17}},line:195},"16":{name:"(anonymous_16)",decl:{start:{line:201,column:23},end:{line:201,column:24}},loc:{start:{line:201,column:30},end:{line:205,column:17}},line:201},"17":{name:"(anonymous_17)",decl:{start:{line:224,column:21},end:{line:224,column:22}},loc:{start:{line:224,column:45},end:{line:268,column:5}},line:224},"18":{name:"(anonymous_18)",decl:{start:{line:229,column:23},end:{line:229,column:24}},loc:{start:{line:229,column:30},end:{line:233,column:17}},line:229},"19":{name:"(anonymous_19)",decl:{start:{line:235,column:23},end:{line:235,column:24}},loc:{start:{line:235,column:30},end:{line:239,column:17}},line:235},"20":{name:"(anonymous_20)",decl:{start:{line:241,column:23},end:{line:241,column:24}},loc:{start:{line:241,column:30},end:{line:245,column:17}},line:241}},branchMap:{"0":{loc:{start:{line:11,column:4},end:{line:34,column:5}},type:"if",locations:[{start:{line:11,column:4},end:{line:34,column:5}},{start:{line:11,column:4},end:{line:34,column:5}}],line:11},"1":{loc:{start:{line:18,column:9},end:{line:34,column:5}},type:"if",locations:[{start:{line:18,column:9},end:{line:34,column:5}},{start:{line:18,column:9},end:{line:34,column:5}}],line:18},"2":{loc:{start:{line:26,column:11},end:{line:34,column:5}},type:"if",locations:[{start:{line:26,column:11},end:{line:34,column:5}},{start:{line:26,column:11},end:{line:34,column:5}}],line:26},"3":{loc:{start:{line:76,column:13},end:{line:84,column:13}},type:"if",locations:[{start:{line:76,column:13},end:{line:84,column:13}},{start:{line:76,column:13},end:{line:84,column:13}}],line:76},"4":{loc:{start:{line:79,column:19},end:{line:84,column:13}},type:"if",locations:[{start:{line:79,column:19},end:{line:84,column:13}},{start:{line:79,column:19},end:{line:84,column:13}}],line:79},"5":{loc:{start:{line:125,column:12},end:{line:133,column:13}},type:"if",locations:[{start:{line:125,column:12},end:{line:133,column:13}},{start:{line:125,column:12},end:{line:133,column:13}}],line:125},"6":{loc:{start:{line:128,column:17},end:{line:133,column:13}},type:"if",locations:[{start:{line:128,column:17},end:{line:133,column:13}},{start:{line:128,column:17},end:{line:133,column:13}}],line:128},"7":{loc:{start:{line:178,column:12},end:{line:185,column:13}},type:"if",locations:[{start:{line:178,column:12},end:{line:185,column:13}},{start:{line:178,column:12},end:{line:185,column:13}}],line:178},"8":{loc:{start:{line:180,column:19},end:{line:185,column:13}},type:"if",locations:[{start:{line:180,column:19},end:{line:185,column:13}},{start:{line:180,column:19},end:{line:185,column:13}}],line:180},"9":{loc:{start:{line:214,column:12},end:{line:221,column:13}},type:"if",locations:[{start:{line:214,column:12},end:{line:221,column:13}},{start:{line:214,column:12},end:{line:221,column:13}}],line:214},"10":{loc:{start:{line:216,column:19},end:{line:221,column:13}},type:"if",locations:[{start:{line:216,column:19},end:{line:221,column:13}},{start:{line:216,column:19},end:{line:221,column:13}}],line:216},"11":{loc:{start:{line:255,column:12},end:{line:266,column:13}},type:"if",locations:[{start:{line:255,column:12},end:{line:266,column:13}},{start:{line:255,column:12},end:{line:266,column:13}}],line:255},"12":{loc:{start:{line:257,column:19},end:{line:266,column:13}},type:"if",locations:[{start:{line:257,column:19},end:{line:266,column:13}},{start:{line:257,column:19},end:{line:266,column:13}}],line:257},"13":{loc:{start:{line:261,column:17},end:{line:266,column:13}},type:"if",locations:[{start:{line:261,column:17},end:{line:266,column:13}},{start:{line:261,column:17},end:{line:266,column:13}}],line:261}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const lora_app_server=(cov_2usnz76pl.s[0]++,require('../services/API/lora_app_server'));const db=(cov_2usnz76pl.s[1]++,require('../services/database/networks_db'));const compare=(cov_2usnz76pl.s[2]++,require('../services/compare'));const VError=(cov_2usnz76pl.s[3]++,require('verror'));const DEVICE_UPLINK_DB=(cov_2usnz76pl.s[4]++,require('../services/database/device_rx_db'));const error_handler=(cov_2usnz76pl.s[5]++,require('./error_logs'));function network_api_request_data(data,type){cov_2usnz76pl.f[0]++;let request;cov_2usnz76pl.s[6]++;if(type==0){cov_2usnz76pl.b[0][0]++;cov_2usnz76pl.s[7]++;//get form 
request={limit:100//offset: null,
//search: null
};}else{cov_2usnz76pl.b[0][1]++;cov_2usnz76pl.s[8]++;if(type==1){cov_2usnz76pl.b[1][0]++;cov_2usnz76pl.s[9]++;//create form
request={"organization":{"canHaveGateways":data.network_can_have_gateways,"displayName":`${data.network_display_name}`,"name":`${data.network_name}`}};}else{cov_2usnz76pl.b[1][1]++;cov_2usnz76pl.s[10]++;if(type==2){cov_2usnz76pl.b[2][0]++;cov_2usnz76pl.s[11]++;//Update form
request={"organization":{"canHaveGateways":data.network_can_have_gateways,"displayName":`${data.network_display_name}`,"name":`${data.network_name}`}};}else{cov_2usnz76pl.b[2][1]++;}}}cov_2usnz76pl.s[12]++;return request;}function convert_names_networks(networks){cov_2usnz76pl.f[1]++;//console.log(sub_networks);
let networks_return=(cov_2usnz76pl.s[13]++,[]);let network=(cov_2usnz76pl.s[14]++,{network_can_have_gateways:null,network_created_at:null,network_display_name:null,network_id:null,network_name:null,network_updated_at:null});cov_2usnz76pl.s[15]++;for(let i=0;i<networks.length;i++){cov_2usnz76pl.s[16]++;network.network_can_have_gateways=networks[i].canHaveGateways;cov_2usnz76pl.s[17]++;network.network_created_at=networks[i].createdAt;cov_2usnz76pl.s[18]++;network.network_display_name=networks[i].displayName;cov_2usnz76pl.s[19]++;network.network_id=networks[i].id;cov_2usnz76pl.s[20]++;network.network_name=networks[i].name;cov_2usnz76pl.s[21]++;network.network_updated_at=networks[i].updatedAt;cov_2usnz76pl.s[22]++;networks_return[i]=network;cov_2usnz76pl.s[23]++;network={network_can_have_gateways:null,network_created_at:null,network_display_name:null,network_id:null,network_name:null,network_updated_at:null};}cov_2usnz76pl.s[24]++;return networks_return;}async function get_networks(){cov_2usnz76pl.f[2]++;cov_2usnz76pl.s[25]++;try{let request_body=(cov_2usnz76pl.s[26]++,network_api_request_data(null,0));let networks_lora=(cov_2usnz76pl.s[27]++,await lora_app_server.get_organizations(request_body)//error here
.catch(err=>{cov_2usnz76pl.f[3]++;let error;cov_2usnz76pl.s[28]++;if(err.errno=="ECONNREFUSED"){cov_2usnz76pl.b[3][0]++;cov_2usnz76pl.s[29]++;//Error connecting to the lora app server
error=new VError('%s',err.message);}else{cov_2usnz76pl.b[3][1]++;cov_2usnz76pl.s[30]++;if(err.response.data.message!=null){cov_2usnz76pl.b[4][0]++;cov_2usnz76pl.s[31]++;//Error returned from lora app server
error=new VError('%s',err.message);}else{cov_2usnz76pl.b[4][1]++;cov_2usnz76pl.s[32]++;error=new VError('Unknown problem coneccting to lora app server');}}cov_2usnz76pl.s[33]++;throw error;}));cov_2usnz76pl.s[34]++;networks_lora=convert_names_networks(networks_lora.data.result);cov_2usnz76pl.s[35]++;return networks_lora;}catch(err){cov_2usnz76pl.s[36]++;throw err;}}function error_message(current_error_message,previous_error){cov_2usnz76pl.f[4]++;let error=(cov_2usnz76pl.s[37]++,new VError("%s : %s",current_error_message,previous_error));cov_2usnz76pl.s[38]++;return error;}cov_2usnz76pl.s[39]++;module.exports={get_networks:async function(req,res){cov_2usnz76pl.f[5]++;let error_location=(cov_2usnz76pl.s[40]++,null);//0=lora, 1=db
let networks_lora;cov_2usnz76pl.s[41]++;try{cov_2usnz76pl.s[42]++;networks_lora=await get_networks().catch(err=>{cov_2usnz76pl.f[6]++;cov_2usnz76pl.s[43]++;//Error getting networks from lora app server
error_location=0;cov_2usnz76pl.s[44]++;throw error_message("get networks : lora app server",err.message);});let networks_db=(cov_2usnz76pl.s[45]++,await db.get_networks_not_deleted().catch(err=>{cov_2usnz76pl.f[7]++;cov_2usnz76pl.s[46]++;//error getting networks from db
error_location=1;cov_2usnz76pl.s[47]++;throw error_message("get networks : database",err.message);}));cov_2usnz76pl.s[48]++;await compare.compare_networks(networks_lora,networks_db).catch(err=>{cov_2usnz76pl.f[8]++;cov_2usnz76pl.s[49]++;//Error comparing networks 
error_location=1;cov_2usnz76pl.s[50]++;throw error_message("get networks",err.message);});cov_2usnz76pl.s[51]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[52]++;res.status(200).send({networks_lora:networks_lora,message:'Networks fetched',type:'success'});}catch(err){cov_2usnz76pl.s[53]++;error_handler.error_logger(req,err);cov_2usnz76pl.s[54]++;if(error_location==0){cov_2usnz76pl.b[5][0]++;cov_2usnz76pl.s[55]++;res.status(500).send({message:"Failed to get networks",type:'error'});}else{cov_2usnz76pl.b[5][1]++;cov_2usnz76pl.s[56]++;if(error_location==1){cov_2usnz76pl.b[6][0]++;cov_2usnz76pl.s[57]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[58]++;res.status(200).send({networks_lora:networks_lora,message:"Error updating networks in database",type:'info'});}else{cov_2usnz76pl.b[6][1]++;cov_2usnz76pl.s[59]++;res.status(500).send({message:'Failed to get networks',type:'error'});}}}},get_networks_database:async function(req,res){cov_2usnz76pl.f[9]++;cov_2usnz76pl.s[60]++;try{let networks_db=(cov_2usnz76pl.s[61]++,await db.get_networks().catch(err=>{cov_2usnz76pl.f[10]++;cov_2usnz76pl.s[62]++;//error getting networks from db
error_location=1;cov_2usnz76pl.s[63]++;throw error_message("get networks : database",err.message);}));cov_2usnz76pl.s[64]++;networks_db=JSON.stringify(networks_db);cov_2usnz76pl.s[65]++;res.status(200).send({networks_db:networks_db,message:'Networks fetched',type:'success'});//console.log('Networks fetched from database')
}catch(err){cov_2usnz76pl.s[66]++;error_handler.error_logger(req,err);cov_2usnz76pl.s[67]++;res.status(500).send({message:"Failed to get networks",type:'error'});}},create_networks:async function(req,res){cov_2usnz76pl.f[11]++;let error_location=(cov_2usnz76pl.s[68]++,null);//0=lora, 1=lora 2=db
let networks_lora;cov_2usnz76pl.s[69]++;try{cov_2usnz76pl.s[70]++;console.log(req.body.data);let data=(cov_2usnz76pl.s[71]++,JSON.parse(req.body.data));let request_body=(cov_2usnz76pl.s[72]++,network_api_request_data(data,1));let result=(cov_2usnz76pl.s[73]++,await lora_app_server.create_organizations(request_body).catch(err=>{cov_2usnz76pl.f[12]++;cov_2usnz76pl.s[74]++;//error creating network on lora app server
error_location=0;cov_2usnz76pl.s[75]++;throw error_message("create network : lora app server",err.message);}));cov_2usnz76pl.s[76]++;await db.create_network(result.data.id,data.network_name,data.network_display_name,data.network_can_have_gateways).catch(err=>{cov_2usnz76pl.f[13]++;cov_2usnz76pl.s[77]++;//error creating network on db
error_location=1;cov_2usnz76pl.s[78]++;throw error_message("create network : database",err.message);});cov_2usnz76pl.s[79]++;res.status(201).send({message:'Network created',type:'success'});}catch(err){cov_2usnz76pl.s[80]++;error_handler.error_logger(req,err);//e_l =0 (problem creating network)
//e_l =1 (network created.. failed to fetch networks)
//e_l =2 (network created.. networks fetched.. failed to create network on db)
//other = (unknown error/exception)
cov_2usnz76pl.s[81]++;console.log(err);cov_2usnz76pl.s[82]++;if(error_location==0){cov_2usnz76pl.b[7][0]++;cov_2usnz76pl.s[83]++;res.status(500).send({message:"Failed to create network",type:'error'});}else{cov_2usnz76pl.b[7][1]++;cov_2usnz76pl.s[84]++;if(error_location==1){cov_2usnz76pl.b[8][0]++;cov_2usnz76pl.s[85]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[86]++;res.status(200).send({networks_lora:networks_lora,message:"Network Created. Error creating network in database",type:'info'});}else{cov_2usnz76pl.b[8][1]++;cov_2usnz76pl.s[87]++;res.status(500).send({message:'Error',type:'error'});}}}},update_networks:async function(req,res){cov_2usnz76pl.f[14]++;let error_location=(cov_2usnz76pl.s[88]++,null);//0=lora, 1=lora 2=db
let networks_lora;cov_2usnz76pl.s[89]++;try{let data=(cov_2usnz76pl.s[90]++,JSON.parse(req.body.data));let request_body=(cov_2usnz76pl.s[91]++,network_api_request_data(data,2));let result=(cov_2usnz76pl.s[92]++,await lora_app_server.update_organizations(request_body,req.params.network_id).catch(err=>{cov_2usnz76pl.f[15]++;cov_2usnz76pl.s[93]++;//error updating network on lora app server
error_location=0;cov_2usnz76pl.s[94]++;throw error_message("update network : lora app server",err.message);}));cov_2usnz76pl.s[95]++;await db.update_networks_all_parameters(data,req.params.network_id).catch(err=>{cov_2usnz76pl.f[16]++;cov_2usnz76pl.s[96]++;//error updating network on database
error_location=1;cov_2usnz76pl.s[97]++;throw error_message("update network : database",err.message);});cov_2usnz76pl.s[98]++;res.status(200).send({message:'Network updated',type:'success'});}catch(err){cov_2usnz76pl.s[99]++;error_handler.error_logger(req,err);//e_l =0 (problem updating network)
//e_l =1 (network updated.. failed to fetch networks)
//e_l =2 (network updated.. networks fetched.. failed to update network on db)
//other = (unknown error/exception)
cov_2usnz76pl.s[100]++;console.log(err);cov_2usnz76pl.s[101]++;if(error_location==0){cov_2usnz76pl.b[9][0]++;cov_2usnz76pl.s[102]++;res.status(500).send({message:"Failed to update network",type:'error'});}else{cov_2usnz76pl.b[9][1]++;cov_2usnz76pl.s[103]++;if(error_location==1){cov_2usnz76pl.b[10][0]++;cov_2usnz76pl.s[104]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[105]++;res.status(200).send({networks_lora:networks_lora,message:"Network updated. Error updating network in database",type:'info'});}else{cov_2usnz76pl.b[10][1]++;cov_2usnz76pl.s[106]++;res.status(500).send({message:'Error',type:'error'});}}}},delete_networks:async function(req,res){cov_2usnz76pl.f[17]++;let error_location=(cov_2usnz76pl.s[107]++,null);//0=lora, 1=lora 2=db
let networks_lora;cov_2usnz76pl.s[108]++;try{cov_2usnz76pl.s[109]++;await lora_app_server.delete_organizations(req.params.network_id).catch(err=>{cov_2usnz76pl.f[18]++;cov_2usnz76pl.s[110]++;//error deleting network from lora app server
error_location=0;cov_2usnz76pl.s[111]++;throw error_message("delete network : lora app server",err.message);});cov_2usnz76pl.s[112]++;networks_lora=await get_networks().catch(err=>{cov_2usnz76pl.f[19]++;cov_2usnz76pl.s[113]++;//error getting networks from lora app server
error_location=1;cov_2usnz76pl.s[114]++;throw error_message("delete network : lora app server",err.message);});cov_2usnz76pl.s[115]++;await db.update_network("network_deleted",1,req.params.network_id).catch(err=>{cov_2usnz76pl.f[20]++;cov_2usnz76pl.s[116]++;//error updating delete coloum from db
error_location=2;cov_2usnz76pl.s[117]++;throw error_message("delete network : lora app server",err.message);});cov_2usnz76pl.s[118]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[119]++;res.status(200).send({networks_lora:networks_lora,message:'Network deleted',type:'success'});}catch(err){cov_2usnz76pl.s[120]++;error_handler.error_logger(req,err);//e_l =0 (problem deleteing network)
//e_l =1 (network deleted.. failed to fetch networks)
//e_l =2 (network deleted.. networks fetched.. failed to delete network on db)
//other = (unknown error/exception)
cov_2usnz76pl.s[121]++;console.log(err);cov_2usnz76pl.s[122]++;if(error_location==0){cov_2usnz76pl.b[11][0]++;cov_2usnz76pl.s[123]++;res.status(500).send({message:"Failed to delete network",type:'error'});}else{cov_2usnz76pl.b[11][1]++;cov_2usnz76pl.s[124]++;if(error_location==1){cov_2usnz76pl.b[12][0]++;cov_2usnz76pl.s[125]++;networks_lora=JSON.stringify([]);cov_2usnz76pl.s[126]++;res.status(200).send({networks_lora:networks_lora,message:"Network deleted. Failed to fetch networks",type:'info'});}else{cov_2usnz76pl.b[12][1]++;cov_2usnz76pl.s[127]++;if(error_location==2){cov_2usnz76pl.b[13][0]++;cov_2usnz76pl.s[128]++;networks_lora=JSON.stringify(networks_lora);cov_2usnz76pl.s[129]++;res.status(200).send({networks_lora:networks_lora,message:"Network deleted. Error updating network in database",type:'info'});}else{cov_2usnz76pl.b[13][1]++;cov_2usnz76pl.s[130]++;res.status(500).send({message:'Error',type:'error'});}}}}}};