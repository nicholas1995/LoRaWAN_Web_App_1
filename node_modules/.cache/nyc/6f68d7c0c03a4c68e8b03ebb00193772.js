var cov_3c4rd8r4k=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/error_logs.js",hash="659008b255c332dadd5807d2eb9efb3bbf057479",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/error_logs.js",statementMap:{"0":{start:{line:1,column:21},end:{line:1,column:65}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:5,column:21},end:{line:5,column:35}},"3":{start:{line:6,column:4},end:{line:6,column:37}},"4":{start:{line:7,column:4},end:{line:13,column:5}},"5":{start:{line:9,column:16},end:{line:9,column:42}},"6":{start:{line:10,column:8},end:{line:10,column:44}},"7":{start:{line:12,column:8},end:{line:12,column:41}},"8":{start:{line:14,column:4},end:{line:14,column:58}},"9":{start:{line:37,column:0},end:{line:150,column:1}},"10":{start:{line:39,column:20},end:{line:47,column:41}},"11":{start:{line:48,column:8},end:{line:48,column:21}},"12":{start:{line:51,column:20},end:{line:51,column:22}},"13":{start:{line:52,column:8},end:{line:52,column:40}},"14":{start:{line:53,column:8},end:{line:94,column:9}},"15":{start:{line:54,column:12},end:{line:54,column:26}},"16":{start:{line:55,column:12},end:{line:78,column:13}},"17":{start:{line:56,column:16},end:{line:56,column:32}},"18":{start:{line:57,column:16},end:{line:65,column:209}},"19":{start:{line:67,column:16},end:{line:67,column:32}},"20":{start:{line:68,column:16},end:{line:77,column:39}},"21":{start:{line:80,column:12},end:{line:80,column:26}},"22":{start:{line:81,column:12},end:{line:93,column:13}},"23":{start:{line:82,column:16},end:{line:82,column:32}},"24":{start:{line:84,column:16},end:{line:86,column:47}},"25":{start:{line:88,column:16},end:{line:88,column:32}},"26":{start:{line:90,column:16},end:{line:92,column:39}},"27":{start:{line:95,column:8},end:{line:95,column:31}},"28":{start:{line:96,column:8},end:{line:96,column:21}},"29":{start:{line:99,column:8},end:{line:135,column:9}},"30":{start:{line:110,column:12},end:{line:111,column:34}},"31":{start:{line:110,column:26},end:{line:110,column:47}},"32":{start:{line:111,column:17},end:{line:111,column:34}},"33":{start:{line:113,column:12},end:{line:114,column:43}},"34":{start:{line:113,column:26},end:{line:113,column:65}},"35":{start:{line:114,column:17},end:{line:114,column:43}},"36":{start:{line:115,column:29},end:{line:115,column:43}},"37":{start:{line:116,column:36},end:{line:116,column:54}},"38":{start:{line:117,column:31},end:{line:117,column:56}},"39":{start:{line:120,column:12},end:{line:121,column:40}},"40":{start:{line:120,column:29},end:{line:120,column:57}},"41":{start:{line:121,column:17},end:{line:121,column:40}},"42":{start:{line:122,column:40},end:{line:125,column:84}},"43":{start:{line:126,column:36},end:{line:126,column:61}},"44":{start:{line:127,column:30},end:{line:127,column:39}},"45":{start:{line:128,column:12},end:{line:132,column:14}},"46":{start:{line:130,column:16},end:{line:130,column:26}},"47":{start:{line:134,column:12},end:{line:134,column:29}},"48":{start:{line:138,column:8},end:{line:148,column:9}},"49":{start:{line:139,column:29},end:{line:143,column:18}},"50":{start:{line:142,column:20},end:{line:142,column:30}},"51":{start:{line:144,column:12},end:{line:144,column:52}},"52":{start:{line:145,column:12},end:{line:145,column:110}},"53":{start:{line:147,column:12},end:{line:147,column:28}}},fnMap:{"0":{name:"create_action",decl:{start:{line:4,column:9},end:{line:4,column:22}},loc:{start:{line:4,column:27},end:{line:15,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:38,column:39},end:{line:38,column:40}},loc:{start:{line:38,column:52},end:{line:49,column:5}},line:38},"2":{name:"(anonymous_2)",decl:{start:{line:50,column:19},end:{line:50,column:20}},loc:{start:{line:50,column:58},end:{line:97,column:5}},line:50},"3":{name:"(anonymous_3)",decl:{start:{line:98,column:18},end:{line:98,column:19}},loc:{start:{line:98,column:44},end:{line:136,column:5}},line:98},"4":{name:"(anonymous_4)",decl:{start:{line:129,column:14},end:{line:129,column:15}},loc:{start:{line:129,column:21},end:{line:131,column:15}},line:129},"5":{name:"(anonymous_5)",decl:{start:{line:137,column:9},end:{line:137,column:10}},loc:{start:{line:137,column:33},end:{line:149,column:5}},line:137},"6":{name:"(anonymous_6)",decl:{start:{line:140,column:23},end:{line:140,column:24}},loc:{start:{line:140,column:30},end:{line:143,column:17}},line:140}},branchMap:{"0":{loc:{start:{line:7,column:4},end:{line:13,column:5}},type:"if",locations:[{start:{line:7,column:4},end:{line:13,column:5}},{start:{line:7,column:4},end:{line:13,column:5}}],line:7},"1":{loc:{start:{line:53,column:8},end:{line:94,column:9}},type:"if",locations:[{start:{line:53,column:8},end:{line:94,column:9}},{start:{line:53,column:8},end:{line:94,column:9}}],line:53},"2":{loc:{start:{line:55,column:12},end:{line:78,column:13}},type:"if",locations:[{start:{line:55,column:12},end:{line:78,column:13}},{start:{line:55,column:12},end:{line:78,column:13}}],line:55},"3":{loc:{start:{line:81,column:12},end:{line:93,column:13}},type:"if",locations:[{start:{line:81,column:12},end:{line:93,column:13}},{start:{line:81,column:12},end:{line:93,column:13}}],line:81},"4":{loc:{start:{line:110,column:12},end:{line:111,column:34}},type:"if",locations:[{start:{line:110,column:12},end:{line:111,column:34}},{start:{line:110,column:12},end:{line:111,column:34}}],line:110},"5":{loc:{start:{line:113,column:12},end:{line:114,column:43}},type:"if",locations:[{start:{line:113,column:12},end:{line:114,column:43}},{start:{line:113,column:12},end:{line:114,column:43}}],line:113},"6":{loc:{start:{line:120,column:12},end:{line:121,column:40}},type:"if",locations:[{start:{line:120,column:12},end:{line:121,column:40}},{start:{line:120,column:12},end:{line:121,column:40}}],line:120},"7":{loc:{start:{line:122,column:40},end:{line:125,column:84}},type:"binary-expr",locations:[{start:{line:122,column:40},end:{line:122,column:70}},{start:{line:123,column:16},end:{line:123,column:44}},{start:{line:124,column:16},end:{line:124,column:40}},{start:{line:125,column:17},end:{line:125,column:83}}],line:122},"8":{loc:{start:{line:125,column:17},end:{line:125,column:83}},type:"cond-expr",locations:[{start:{line:125,column:41},end:{line:125,column:76}},{start:{line:125,column:79},end:{line:125,column:83}}],line:125}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0,0,0],"8":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const DB_ERROR_LOG=(cov_3c4rd8r4k.s[0]++,require('../services/database/error_log_db'));const VError=(cov_3c4rd8r4k.s[1]++,require("verror"));function create_action(req){cov_3c4rd8r4k.f[0]++;let error_path=(cov_3c4rd8r4k.s[2]++,req.route.path);//remove the /api from the route to get the entity part of the route eg vessel 
cov_3c4rd8r4k.s[3]++;error_path=error_path.slice(4);//remove the api from infront of the route '/api
cov_3c4rd8r4k.s[4]++;if(error_path.lastIndexOf("/")!=0){cov_3c4rd8r4k.b[0][0]++;//so that it will only happen when there is a second /
let x=(cov_3c4rd8r4k.s[5]++,error_path.indexOf("/",1));//extract the string between then first and second /
cov_3c4rd8r4k.s[6]++;error_path=error_path.slice(1,x);}else{cov_3c4rd8r4k.b[0][1]++;cov_3c4rd8r4k.s[7]++;error_path=error_path.slice(1);}cov_3c4rd8r4k.s[8]++;return req.route.stack[0].method+" "+error_path;}/*     error_message: function(current_error_message, previous_error, error_name){
        let error = '';
        if(previous_error == null){
            if(error_name != null){
                error = new VError({'name': error_name},"%s", current_error_message);
            }
            else  error = new VError("%s", current_error_message);
        }else{
            if(error_name != null){
                error = new VError({'name': error_name},"%s", current_error_message);
            }
            else error = new VError("%s : %s", current_error_message, previous_error);
        }
/*         if(error_name != null){
            error.name = error_name
        //console.log(error_name)

        } 
        return error;
    }, */cov_3c4rd8r4k.s[9]++;module.exports={lora_app_server_api_error_creater:function(err){cov_3c4rd8r4k.f[1]++;let error=(cov_3c4rd8r4k.s[10]++,new VError({name:'',info:{status:err.response.status,status_text:err.response.statusText,path:err.response.request.path,method:err.response.request.method}},"%s",err.response.data.error));cov_3c4rd8r4k.s[11]++;return error;},error_message:function(current_error,previous_error){cov_3c4rd8r4k.f[2]++;let error=(cov_3c4rd8r4k.s[12]++,'');cov_3c4rd8r4k.s[13]++;console.log(current_error.errno);cov_3c4rd8r4k.s[14]++;if(typeof current_error.response!=='undefined'){cov_3c4rd8r4k.b[1][0]++;cov_3c4rd8r4k.s[15]++;//an error returned from the lora app server
console.log(1);cov_3c4rd8r4k.s[16]++;if(previous_error==null){cov_3c4rd8r4k.b[2][0]++;cov_3c4rd8r4k.s[17]++;//this is the lowest level error
console.log(1.1);cov_3c4rd8r4k.s[18]++;error=new VError({'name':current_error.errno,'info':{'status':current_error.response.status,'status_text':current_error.response.statusText,'path':current_error.response.request.path,'method':current_error.response.request.method}},'"%s" {Path: "%s", Method: "%s", Status: "%s"}',current_error.response.data.error,current_error.response.request.path,current_error.response.request.method,current_error.response.status);}else{cov_3c4rd8r4k.b[2][1]++;cov_3c4rd8r4k.s[19]++;//Not the lowest error
console.log(1.2);cov_3c4rd8r4k.s[20]++;error=new VError({'name':current_error.response.statusText,'cause':previous_error,'info':{'status':current_error.response.status,'status_text':current_error.response.statusText,'path':current_error.response.request.path,'method':current_error.response.request.method}},"%s",current_error);}}else{cov_3c4rd8r4k.b[1][1]++;cov_3c4rd8r4k.s[21]++;//Not an error returned from the lora app server
console.log(2);cov_3c4rd8r4k.s[22]++;if(previous_error==null){cov_3c4rd8r4k.b[3][0]++;cov_3c4rd8r4k.s[23]++;console.log(2.1);//current error will be an object in this case
cov_3c4rd8r4k.s[24]++;error=new VError({'name':current_error.errno},"%s",current_error.message);}else{cov_3c4rd8r4k.b[3][1]++;cov_3c4rd8r4k.s[25]++;console.log(2.2);//Current error will be a string in this case
cov_3c4rd8r4k.s[26]++;error=new VError({'cause':previous_error},"%s",current_error);}}cov_3c4rd8r4k.s[27]++;console.log(error.name);cov_3c4rd8r4k.s[28]++;return error;},error_logger:async function(req,err){cov_3c4rd8r4k.f[3]++;cov_3c4rd8r4k.s[29]++;try{/*             if(err.message.search("character") >= 0){//THis is done because the lora app server somethimes returns error messages with invalid charactes hence we need to remove them
                //Example --- character '\b'... we need to remove '\b'
                let string_positon_message = err.message.search("character") + 9;
                err.message = err.message.substr(0, string_positon_message) + err.message.substr(string_positon_message+5)
                let string_positon_stack = err.stack.search("character") + 9;

                err.stack = err.stack.substr(0, string_positon_stack) + err.stack.substr(string_positon_stack+5)
                console.log('TRUEEEe')
            } */let user_id;cov_3c4rd8r4k.s[30]++;if(req.user){cov_3c4rd8r4k.b[4][0]++;cov_3c4rd8r4k.s[31]++;user_id=req.user.id;}else{cov_3c4rd8r4k.b[4][1]++;cov_3c4rd8r4k.s[32]++;user_id='null';}let error_user_class;cov_3c4rd8r4k.s[33]++;if(req.user){cov_3c4rd8r4k.b[5][0]++;cov_3c4rd8r4k.s[34]++;error_user_class=req.user.user_class;}else{cov_3c4rd8r4k.b[5][1]++;cov_3c4rd8r4k.s[35]++;error_user_class="null";}let error_path=(cov_3c4rd8r4k.s[36]++,req.route.path);let error_user_action=(cov_3c4rd8r4k.s[37]++,create_action(req));let error_method=(cov_3c4rd8r4k.s[38]++,req.route.stack[0].method);//let error_name= err.name;
let error_message;cov_3c4rd8r4k.s[39]++;if(err.message){cov_3c4rd8r4k.b[6][0]++;cov_3c4rd8r4k.s[40]++;error_message=err.message;}else{cov_3c4rd8r4k.b[6][1]++;cov_3c4rd8r4k.s[41]++;error_message='null';}let error_user_ip_address=(cov_3c4rd8r4k.s[42]++,(cov_3c4rd8r4k.b[7][0]++,req.headers['x-forwarded-for'])||(cov_3c4rd8r4k.b[7][1]++,req.connection.remoteAddress)||(cov_3c4rd8r4k.b[7][2]++,req.socket.remoteAddress)||(cov_3c4rd8r4k.b[7][3]++,req.connection.socket?(cov_3c4rd8r4k.b[8][0]++,req.connection.socket.remoteAddress):(cov_3c4rd8r4k.b[8][1]++,null)));let error_user_device=(cov_3c4rd8r4k.s[43]++,req.headers["user-agent"]);let error_stack=(cov_3c4rd8r4k.s[44]++,err.stack);cov_3c4rd8r4k.s[45]++;DB_ERROR_LOG.create_log(user_id,error_user_class,error_user_action,error_user_device,error_user_ip_address,error_message,error_stack).catch(err=>{cov_3c4rd8r4k.f[4]++;cov_3c4rd8r4k.s[46]++;throw err;});}catch(err){cov_3c4rd8r4k.s[47]++;console.log(err);}},get:async function(req,res){cov_3c4rd8r4k.f[5]++;cov_3c4rd8r4k.s[48]++;try{let error_logs=(cov_3c4rd8r4k.s[49]++,await DB_ERROR_LOG.get_logs().catch(err=>{cov_3c4rd8r4k.f[6]++;cov_3c4rd8r4k.s[50]++;//Error getting error logs
throw err;}));cov_3c4rd8r4k.s[51]++;error_logs=JSON.stringify(error_logs);cov_3c4rd8r4k.s[52]++;res.status(200).send({error_logs:error_logs,message:'Error Logs Fetched.',type:'success'});}catch(err){cov_3c4rd8r4k.s[53]++;console.log(err);}}};