var cov_2jw0ixdsob=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/policies/sub_network_policy.js",hash="afef763f2a2e4b9b5792e8aab987fbc3784db704",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/policies/sub_network_policy.js",statementMap:{"0":{start:{line:1,column:12},end:{line:1,column:26}},"1":{start:{line:2,column:21},end:{line:2,column:57}},"2":{start:{line:4,column:0},end:{line:99,column:1}},"3":{start:{line:6,column:19},end:{line:6,column:44}},"4":{start:{line:7,column:23},end:{line:14,column:9}},"5":{start:{line:15,column:33},end:{line:15,column:59}},"6":{start:{line:16,column:8},end:{line:50,column:9}},"7":{start:{line:17,column:12},end:{line:47,column:13}},"8":{start:{line:19,column:20},end:{line:19,column:51}},"9":{start:{line:20,column:20},end:{line:20,column:58}},"10":{start:{line:21,column:20},end:{line:21,column:121}},"11":{start:{line:22,column:20},end:{line:22,column:26}},"12":{start:{line:24,column:20},end:{line:24,column:46}},"13":{start:{line:25,column:20},end:{line:25,column:57}},"14":{start:{line:26,column:20},end:{line:26,column:128}},"15":{start:{line:27,column:20},end:{line:27,column:26}},"16":{start:{line:29,column:20},end:{line:29,column:45}},"17":{start:{line:30,column:20},end:{line:30,column:57}},"18":{start:{line:31,column:20},end:{line:31,column:115}},"19":{start:{line:32,column:20},end:{line:32,column:26}},"20":{start:{line:34,column:20},end:{line:34,column:53}},"21":{start:{line:35,column:20},end:{line:35,column:57}},"22":{start:{line:36,column:20},end:{line:36,column:123}},"23":{start:{line:37,column:20},end:{line:37,column:26}},"24":{start:{line:39,column:20},end:{line:39,column:48}},"25":{start:{line:40,column:20},end:{line:40,column:58}},"26":{start:{line:41,column:20},end:{line:41,column:118}},"27":{start:{line:42,column:20},end:{line:42,column:26}},"28":{start:{line:44,column:20},end:{line:44,column:59}},"29":{start:{line:45,column:20},end:{line:45,column:57}},"30":{start:{line:46,column:20},end:{line:46,column:116}},"31":{start:{line:49,column:12},end:{line:49,column:19}},"32":{start:{line:53,column:19},end:{line:53,column:44}},"33":{start:{line:54,column:23},end:{line:61,column:9}},"34":{start:{line:62,column:33},end:{line:62,column:59}},"35":{start:{line:63,column:8},end:{line:97,column:9}},"36":{start:{line:64,column:12},end:{line:94,column:13}},"37":{start:{line:66,column:20},end:{line:66,column:52}},"38":{start:{line:67,column:20},end:{line:67,column:58}},"39":{start:{line:68,column:20},end:{line:68,column:121}},"40":{start:{line:69,column:20},end:{line:69,column:26}},"41":{start:{line:71,column:20},end:{line:71,column:46}},"42":{start:{line:72,column:20},end:{line:72,column:58}},"43":{start:{line:73,column:20},end:{line:73,column:128}},"44":{start:{line:74,column:20},end:{line:74,column:26}},"45":{start:{line:76,column:20},end:{line:76,column:45}},"46":{start:{line:77,column:20},end:{line:77,column:58}},"47":{start:{line:78,column:20},end:{line:78,column:115}},"48":{start:{line:79,column:20},end:{line:79,column:26}},"49":{start:{line:81,column:20},end:{line:81,column:53}},"50":{start:{line:82,column:20},end:{line:82,column:58}},"51":{start:{line:83,column:20},end:{line:83,column:123}},"52":{start:{line:84,column:20},end:{line:84,column:26}},"53":{start:{line:86,column:20},end:{line:86,column:48}},"54":{start:{line:87,column:20},end:{line:87,column:58}},"55":{start:{line:88,column:20},end:{line:88,column:118}},"56":{start:{line:89,column:20},end:{line:89,column:26}},"57":{start:{line:91,column:20},end:{line:91,column:60}},"58":{start:{line:92,column:20},end:{line:92,column:58}},"59":{start:{line:93,column:20},end:{line:93,column:116}},"60":{start:{line:96,column:12},end:{line:96,column:19}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:4},end:{line:5,column:5}},loc:{start:{line:5,column:27},end:{line:51,column:5}},line:5},"1":{name:"(anonymous_1)",decl:{start:{line:52,column:4},end:{line:52,column:5}},loc:{start:{line:52,column:27},end:{line:98,column:5}},line:52}},branchMap:{"0":{loc:{start:{line:16,column:8},end:{line:50,column:9}},type:"if",locations:[{start:{line:16,column:8},end:{line:50,column:9}},{start:{line:16,column:8},end:{line:50,column:9}}],line:16},"1":{loc:{start:{line:17,column:12},end:{line:47,column:13}},type:"switch",locations:[{start:{line:18,column:16},end:{line:22,column:26}},{start:{line:23,column:16},end:{line:27,column:26}},{start:{line:28,column:16},end:{line:32,column:26}},{start:{line:33,column:16},end:{line:37,column:26}},{start:{line:38,column:16},end:{line:42,column:26}},{start:{line:43,column:16},end:{line:46,column:116}}],line:17},"2":{loc:{start:{line:63,column:8},end:{line:97,column:9}},type:"if",locations:[{start:{line:63,column:8},end:{line:97,column:9}},{start:{line:63,column:8},end:{line:97,column:9}}],line:63},"3":{loc:{start:{line:64,column:12},end:{line:94,column:13}},type:"switch",locations:[{start:{line:65,column:16},end:{line:69,column:26}},{start:{line:70,column:16},end:{line:74,column:26}},{start:{line:75,column:16},end:{line:79,column:26}},{start:{line:80,column:16},end:{line:84,column:26}},{start:{line:85,column:16},end:{line:89,column:26}},{start:{line:90,column:16},end:{line:93,column:116}}],line:64}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0,0,0,0,0],"2":[0,0],"3":[0,0,0,0,0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Joi=(cov_2jw0ixdsob.s[0]++,require('joi'));const error_logger=(cov_2jw0ixdsob.s[1]++,require("../controllers/error_logs"));cov_2jw0ixdsob.s[2]++;module.exports={create(req,res,next){cov_2jw0ixdsob.f[0]++;let data=(cov_2jw0ixdsob.s[3]++,JSON.parse(req.body.data));const schema=(cov_2jw0ixdsob.s[4]++,{sub_network_name:Joi.string().required().max(80).regex(new RegExp(/^[a-zA-Z0-9\-\_]*$/)),sub_network_description:Joi.string().required().max(200),network_id:Joi.number().required(),service_profile_id:Joi.string().required(),payload_codec:Joi.string().required().allow('')});const{error,value}=(cov_2jw0ixdsob.s[5]++,Joi.validate(data,schema));cov_2jw0ixdsob.s[6]++;if(error){cov_2jw0ixdsob.b[0][0]++;cov_2jw0ixdsob.s[7]++;switch(error.details[0].context.key){case'sub_network_name':cov_2jw0ixdsob.b[1][0]++;cov_2jw0ixdsob.s[8]++;console.log('sub_network_name');cov_2jw0ixdsob.s[9]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[10]++;res.status(422).send({error:'Invalid Sub-Network Name',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[11]++;break;case'sub_network_description':cov_2jw0ixdsob.b[1][1]++;cov_2jw0ixdsob.s[12]++;console.log('description');cov_2jw0ixdsob.s[13]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[14]++;res.status(422).send({error:'Invalid Sub-Network Description',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[15]++;break;case'network_id':cov_2jw0ixdsob.b[1][2]++;cov_2jw0ixdsob.s[16]++;console.log('network_id');cov_2jw0ixdsob.s[17]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[18]++;res.status(422).send({error:'Invalid Network ID',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[19]++;break;case'service_profile_id':cov_2jw0ixdsob.b[1][3]++;cov_2jw0ixdsob.s[20]++;console.log('service_profile_id');cov_2jw0ixdsob.s[21]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[22]++;res.status(422).send({error:'Invalid Service Profile ID',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[23]++;break;case'payload_codec':cov_2jw0ixdsob.b[1][4]++;cov_2jw0ixdsob.s[24]++;console.log('payload_codec');cov_2jw0ixdsob.s[25]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[26]++;res.status(422).send({error:'Invalid Payload Codec',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[27]++;break;default:cov_2jw0ixdsob.b[1][5]++;cov_2jw0ixdsob.s[28]++;console.log('Error in sub-netork form');cov_2jw0ixdsob.s[29]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[30]++;res.status(422).send({error:'Invalid Information',message:'Error in form.',type:'error'});}}else{cov_2jw0ixdsob.b[0][1]++;cov_2jw0ixdsob.s[31]++;next();}},update(req,res,next){cov_2jw0ixdsob.f[1]++;let data=(cov_2jw0ixdsob.s[32]++,JSON.parse(req.body.data));const schema=(cov_2jw0ixdsob.s[33]++,{sub_network_name:Joi.string().required().max(80).regex(new RegExp(/^[a-zA-Z0-9\-\_]*$/)),sub_network_description:Joi.string().required().max(200),network_id:Joi.number().required(),service_profile_id:Joi.string().required(),payload_codec:Joi.string().required().allow('')});const{error,value}=(cov_2jw0ixdsob.s[34]++,Joi.validate(data,schema));cov_2jw0ixdsob.s[35]++;if(error){cov_2jw0ixdsob.b[2][0]++;cov_2jw0ixdsob.s[36]++;switch(error.details[0].context.key){case'sub_network_name':cov_2jw0ixdsob.b[3][0]++;cov_2jw0ixdsob.s[37]++;console.log("sub_network_name");cov_2jw0ixdsob.s[38]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[39]++;res.status(422).send({error:'Invalid Sub-Network Name',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[40]++;break;case'sub_network_description':cov_2jw0ixdsob.b[3][1]++;cov_2jw0ixdsob.s[41]++;console.log('description');cov_2jw0ixdsob.s[42]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[43]++;res.status(422).send({error:'Invalid Sub-Network Description',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[44]++;break;case'network_id':cov_2jw0ixdsob.b[3][2]++;cov_2jw0ixdsob.s[45]++;console.log('network_id');cov_2jw0ixdsob.s[46]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[47]++;res.status(422).send({error:'Invalid Network ID',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[48]++;break;case'service_profile_id':cov_2jw0ixdsob.b[3][3]++;cov_2jw0ixdsob.s[49]++;console.log('service_profile_id');cov_2jw0ixdsob.s[50]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[51]++;res.status(422).send({error:'Invalid Service Profile ID',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[52]++;break;case'payload_codec':cov_2jw0ixdsob.b[3][4]++;cov_2jw0ixdsob.s[53]++;console.log('payload_codec');cov_2jw0ixdsob.s[54]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[55]++;res.status(422).send({error:'Invalid Payload Codec',message:'Error in form.',type:'error'});cov_2jw0ixdsob.s[56]++;break;default:cov_2jw0ixdsob.b[3][5]++;cov_2jw0ixdsob.s[57]++;console.log("error in sub-network form");cov_2jw0ixdsob.s[58]++;error_logger.error_logger(req,error);cov_2jw0ixdsob.s[59]++;res.status(422).send({error:'Invalid Information',message:'Error in form.',type:'error'});}}else{cov_2jw0ixdsob.b[2][1]++;cov_2jw0ixdsob.s[60]++;next();}}};