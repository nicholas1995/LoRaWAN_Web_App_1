var cov_1o5yz8fmla=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/services/database/networks_db.js",hash="98e68180c4d8f8c32670287ac88013891670d710",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/services/database/networks_db.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:30}},"1":{start:{line:3,column:0},end:{line:34,column:2}},"2":{start:{line:5,column:14},end:{line:6,column:21}},"3":{start:{line:7,column:4},end:{line:7,column:30}},"4":{start:{line:10,column:14},end:{line:12,column:35}},"5":{start:{line:13,column:4},end:{line:13,column:30}},"6":{start:{line:16,column:14},end:{line:18,column:42}},"7":{start:{line:19,column:4},end:{line:19,column:30}},"8":{start:{line:22,column:6},end:{line:22,column:73}},"9":{start:{line:23,column:14},end:{line:25,column:109}},"10":{start:{line:26,column:4},end:{line:26,column:30}},"11":{start:{line:29,column:14},end:{line:31,column:43}},"12":{start:{line:32,column:4},end:{line:32,column:30}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:16},end:{line:4,column:17}},loc:{start:{line:4,column:27},end:{line:8,column:3}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:9,column:28},end:{line:9,column:29}},loc:{start:{line:9,column:39},end:{line:14,column:3}},line:9},"2":{name:"(anonymous_2)",decl:{start:{line:15,column:18},end:{line:15,column:19}},loc:{start:{line:15,column:50},end:{line:20,column:3}},line:15},"3":{name:"(anonymous_3)",decl:{start:{line:21,column:20},end:{line:21,column:21}},loc:{start:{line:21,column:105},end:{line:27,column:3}},line:21},"4":{name:"(anonymous_4)",decl:{start:{line:28,column:36},end:{line:28,column:37}},loc:{start:{line:28,column:64},end:{line:33,column:3}},line:28}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const db=(cov_1o5yz8fmla.s[0]++,require("../../db"));cov_1o5yz8fmla.s[1]++;module.exports={get_networks:function(){cov_1o5yz8fmla.f[0]++;let sql=(cov_1o5yz8fmla.s[2]++,`SELECT *
        FROM network`);cov_1o5yz8fmla.s[3]++;return db.queryAsync(sql);},get_networks_not_deleted:function(){cov_1o5yz8fmla.f[1]++;let sql=(cov_1o5yz8fmla.s[4]++,`SELECT *
        FROM network
        WHERE network_deleted ='0'`);cov_1o5yz8fmla.s[5]++;return db.queryAsync(sql);},update_network:function(col,value,condition){cov_1o5yz8fmla.f[2]++;let sql=(cov_1o5yz8fmla.s[6]++,`UPDATE network
        SET ${col} = '${value}'
        WHERE network_id = '${condition}'`);cov_1o5yz8fmla.s[7]++;return db.queryAsync(sql);},create_network:function(network_id,network_name,network_display_name,network_can_have_gateways){cov_1o5yz8fmla.f[3]++;cov_1o5yz8fmla.s[8]++;console.log('NETWORK CAN HAVE GATEWAYS',network_can_have_gateways);let sql=(cov_1o5yz8fmla.s[9]++,`INSERT INTO network
        (network_id, network_name, network_display_name, network_can_have_gateways)
        VALUES ('${network_id}', '${network_name}', '${network_display_name}', ${network_can_have_gateways})`);cov_1o5yz8fmla.s[10]++;return db.queryAsync(sql);},update_networks_all_parameters:function(data,network_id){cov_1o5yz8fmla.f[4]++;let sql=(cov_1o5yz8fmla.s[11]++,`UPDATE network
        SET network_name = '${data.network_name}', network_display_name= '${data.network_display_name}', network_can_have_gateways= ${data.network_can_have_gateways}
        WHERE network_id = '${network_id}'`);cov_1o5yz8fmla.s[12]++;return db.queryAsync(sql);}};