var cov_26pwkwak2p=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/services/database/sub_networks_db.js",hash="f50a09384d0db76f0179dc835b6031c38d96f2ad",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/services/database/sub_networks_db.js",statementMap:{"0":{start:{line:1,column:11},end:{line:1,column:30}},"1":{start:{line:3,column:0},end:{line:34,column:1}},"2":{start:{line:5,column:18},end:{line:6,column:25}},"3":{start:{line:7,column:8},end:{line:7,column:34}},"4":{start:{line:11,column:18},end:{line:13,column:42}},"5":{start:{line:14,column:8},end:{line:14,column:34}},"6":{start:{line:17,column:18},end:{line:19,column:46}},"7":{start:{line:20,column:8},end:{line:20,column:34}},"8":{start:{line:23,column:18},end:{line:25,column:39}},"9":{start:{line:26,column:8},end:{line:26,column:34}},"10":{start:{line:29,column:18},end:{line:31,column:132}},"11":{start:{line:32,column:8},end:{line:32,column:34}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:22},end:{line:4,column:23}},loc:{start:{line:4,column:34},end:{line:8,column:5}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:40},end:{line:10,column:41}},loc:{start:{line:10,column:60},end:{line:15,column:5}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:16,column:12},end:{line:16,column:13}},loc:{start:{line:16,column:45},end:{line:21,column:5}},line:16},"3":{name:"(anonymous_3)",decl:{start:{line:22,column:40},end:{line:22,column:41}},loc:{start:{line:22,column:60},end:{line:27,column:5}},line:22},"4":{name:"(anonymous_4)",decl:{start:{line:28,column:24},end:{line:28,column:25}},loc:{start:{line:28,column:125},end:{line:33,column:5}},line:28}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const db=(cov_26pwkwak2p.s[0]++,require("../../db"));cov_26pwkwak2p.s[1]++;module.exports={get_sub_networks:function(){cov_26pwkwak2p.f[0]++;let sql=(cov_26pwkwak2p.s[2]++,`SELECT *
        FROM sub_network`);cov_26pwkwak2p.s[3]++;return db.queryAsync(sql);},//This returns all the subnetworks under the specified network or networks 
get_sub_networks_specified_network:function(networks){cov_26pwkwak2p.f[1]++;let sql=(cov_26pwkwak2p.s[4]++,`SELECT *
        FROM sub_network
        WHERE network_id IN (${networks})`);cov_26pwkwak2p.s[5]++;return db.queryAsync(sql);},update:function(col,value,condition){cov_26pwkwak2p.f[2]++;let sql=(cov_26pwkwak2p.s[6]++,`UPDATE sub_network
        SET ${col} = '${value}'
        WHERE sub_network_id = '${condition}'`);cov_26pwkwak2p.s[7]++;return db.queryAsync(sql);},update_sub_networks_all_parameters:function(data,id){cov_26pwkwak2p.f[3]++;let sql=(cov_26pwkwak2p.s[8]++,`UPDATE sub_network
        SET sub_network_name = '${data.sub_network_name}', sub_network_description= '${data.sub_network_description}'
        WHERE sub_network_id = '${id}'`);cov_26pwkwak2p.s[9]++;return db.queryAsync(sql);},create_sub_network:function(sub_network_id,network_id,service_profile_id,sub_network_name,sub_network_description){cov_26pwkwak2p.f[4]++;let sql=(cov_26pwkwak2p.s[10]++,`INSERT INTO sub_network
        (sub_network_id, network_id, service_profile_id, sub_network_name, sub_network_description)
        VALUES ('${sub_network_id}', '${network_id}', '${service_profile_id}', '${sub_network_name}', '${sub_network_description}')`);cov_26pwkwak2p.s[11]++;return db.queryAsync(sql);}};