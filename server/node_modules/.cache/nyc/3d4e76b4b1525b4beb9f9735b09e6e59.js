var cov_yymr01cd6=function(){var path="/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/network_servers.js",hash="b41db45746a62b05948ef57053319ea565d18ac6",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/nicholasmitchell/LoRaWAN_Web_App_1/server/src/controllers/network_servers.js",statementMap:{"0":{start:{line:1,column:24},end:{line:1,column:66}},"1":{start:{line:2,column:14},end:{line:2,column:43}},"2":{start:{line:3,column:15},end:{line:3,column:32}},"3":{start:{line:7,column:2},end:{line:14,column:3}},"4":{start:{line:9,column:4},end:{line:13,column:6}},"5":{start:{line:33,column:2},end:{line:33,column:17}},"6":{start:{line:38,column:33},end:{line:38,column:35}},"7":{start:{line:39,column:25},end:{line:45,column:5}},"8":{start:{line:46,column:4},end:{line:60,column:5}},"9":{start:{line:47,column:8},end:{line:47,column:65}},"10":{start:{line:48,column:8},end:{line:48,column:65}},"11":{start:{line:49,column:8},end:{line:49,column:69}},"12":{start:{line:50,column:8},end:{line:50,column:73}},"13":{start:{line:51,column:8},end:{line:51,column:65}},"14":{start:{line:52,column:8},end:{line:52,column:51}},"15":{start:{line:53,column:8},end:{line:59,column:10}},"16":{start:{line:61,column:4},end:{line:61,column:34}},"17":{start:{line:65,column:4},end:{line:78,column:5}},"18":{start:{line:66,column:27},end:{line:66,column:67}},"19":{start:{line:67,column:30},end:{line:72,column:14}},"20":{start:{line:70,column:28},end:{line:70,column:57}},"21":{start:{line:71,column:16},end:{line:71,column:28}},"22":{start:{line:73,column:8},end:{line:73,column:85}},"23":{start:{line:74,column:8},end:{line:74,column:31}},"24":{start:{line:76,column:8},end:{line:76,column:18}},"25":{start:{line:80,column:0},end:{line:94,column:1}},"26":{start:{line:82,column:8},end:{line:92,column:9}},"27":{start:{line:83,column:39},end:{line:87,column:18}},"28":{start:{line:86,column:20},end:{line:86,column:96}},"29":{start:{line:88,column:12},end:{line:88,column:134}},"30":{start:{line:90,column:12},end:{line:90,column:29}},"31":{start:{line:91,column:12},end:{line:91,column:94}}},fnMap:{"0":{name:"network_server_api_request_data",decl:{start:{line:5,column:9},end:{line:5,column:40}},loc:{start:{line:5,column:53},end:{line:34,column:1}},line:5},"1":{name:"convert_names_network_servers",decl:{start:{line:37,column:9},end:{line:37,column:38}},loc:{start:{line:37,column:56},end:{line:62,column:1}},line:37},"2":{name:"get_network_servers",decl:{start:{line:64,column:15},end:{line:64,column:34}},loc:{start:{line:64,column:36},end:{line:79,column:1}},line:64},"3":{name:"(anonymous_3)",decl:{start:{line:68,column:19},end:{line:68,column:20}},loc:{start:{line:68,column:26},end:{line:72,column:13}},line:68},"4":{name:"(anonymous_4)",decl:{start:{line:81,column:9},end:{line:81,column:10}},loc:{start:{line:81,column:35},end:{line:93,column:5}},line:81},"5":{name:"(anonymous_5)",decl:{start:{line:84,column:23},end:{line:84,column:24}},loc:{start:{line:84,column:30},end:{line:87,column:17}},line:84}},branchMap:{"0":{loc:{start:{line:7,column:2},end:{line:14,column:3}},type:"if",locations:[{start:{line:7,column:2},end:{line:14,column:3}},{start:{line:7,column:2},end:{line:14,column:3}}],line:7}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const lora_app_server=(cov_yymr01cd6.s[0]++,require("../services/API/lora_app_server"));const error=(cov_yymr01cd6.s[1]++,require("../services/errors"));const VError=(cov_yymr01cd6.s[2]++,require("verror"));function network_server_api_request_data(data,type){cov_yymr01cd6.f[0]++;let request;cov_yymr01cd6.s[3]++;if(type==0){cov_yymr01cd6.b[0][0]++;cov_yymr01cd6.s[4]++;//get form
request={limit:100//offset: null,
//search: null
};}else{cov_yymr01cd6.b[0][1]++;}/*  else if (type == 1) {
    //create form
    request = {
      organization: {
        canHaveGateways: data.can_have_gateways,
        displayName: `${data.display_name}`,
        name: `${data.network_name}`
      }
    };
  } else if (type == 2) {
    //Update form
    request = {
      organization: {
        canHaveGateways: data.can_have_gateways,
        displayName: `${data.display_name}`,
        name: `${data.network_name}`
      }
    };
  } */cov_yymr01cd6.s[5]++;return request;}function convert_names_network_servers(network_servers){cov_yymr01cd6.f[1]++;let network_servers_return=(cov_yymr01cd6.s[6]++,[]);let network_server=(cov_yymr01cd6.s[7]++,{created_at:null,network_server_id:null,network_server_name:null,network_server_server:null,updated_at:null});cov_yymr01cd6.s[8]++;for(let i=0;i<network_servers.length;i++){cov_yymr01cd6.s[9]++;network_server.created_at=network_servers[i].createdAt;cov_yymr01cd6.s[10]++;network_server.network_server_id=network_servers[i].id;cov_yymr01cd6.s[11]++;network_server.network_server_name=network_servers[i].name;cov_yymr01cd6.s[12]++;network_server.network_server_server=network_servers[i].server;cov_yymr01cd6.s[13]++;network_server.updated_at=network_servers[i].updatedAt;cov_yymr01cd6.s[14]++;network_servers_return[i]=network_server;cov_yymr01cd6.s[15]++;network_server={created_at:null,network_server_id:null,network_server_name:null,network_server_server:null,updated_at:null};}cov_yymr01cd6.s[16]++;return network_servers_return;}async function get_network_servers(){cov_yymr01cd6.f[2]++;cov_yymr01cd6.s[17]++;try{let request_body=(cov_yymr01cd6.s[18]++,network_server_api_request_data(null,0));let network_servers=(cov_yymr01cd6.s[19]++,await lora_app_server.get_network_servers(request_body).catch(err=>{cov_yymr01cd6.f[3]++;//Error getting network servers from lora app server
let error=(cov_yymr01cd6.s[20]++,new VError("%s",err.message));cov_yymr01cd6.s[21]++;throw error;}));cov_yymr01cd6.s[22]++;network_servers=convert_names_network_servers(network_servers.data.result);cov_yymr01cd6.s[23]++;return network_servers;}catch(err){cov_yymr01cd6.s[24]++;throw err;//Error getting network servers from lora app server
}}cov_yymr01cd6.s[25]++;module.exports={get:async function(req,res){cov_yymr01cd6.f[4]++;cov_yymr01cd6.s[26]++;try{let network_servers_lora=(cov_yymr01cd6.s[27]++,await get_network_servers().catch(err=>{cov_yymr01cd6.f[5]++;cov_yymr01cd6.s[28]++;//Error getting network_servers from lora app server
throw error.error_message("network servers : lora app server",err.message);}));cov_yymr01cd6.s[29]++;res.status(200).send({network_servers_lora:network_servers_lora,message:'Network Servers fetched',type:'success'});}catch(err){cov_yymr01cd6.s[30]++;console.log(err);cov_yymr01cd6.s[31]++;res.status(500).send({message:"Failed to get network servers",type:'error'});}}};